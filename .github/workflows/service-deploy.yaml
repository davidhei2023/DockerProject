name: Polybot Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 18.116.163.224  # to be updated

jobs:
  PolybotBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Build and Push Polybot Image
        run: |
          cd polybot
          
          echo "${{ secrets.DOCKER_REPO_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_REPO_USERNAME }}" --password-stdin
          POLYBOT_IMG_NAME=davidhei/dockerproject:polybot-${{ github.run_number }}
          docker build -t $POLYBOT_IMAGE_NAME .
          docker push $POLYBOT_IMAGE_NAME

  Yolo5Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Build and Push Yolo5 Image
        run: |
          cd yolo5
          
          echo "${{ secrets.DOCKER_REPO_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_REPO_USERNAME }}" --password-stdin
          YOLO5_IMG_NAME=davidhei/dockerproject:yolo5-${{ github.run_number }}
          docker build -t $YOLO5_IMAGE_NAME .
          docker push $YOLO5_IMAGE_NAME

  Deploy:
    name: Deploy Docker Compose Project
    runs-on: ubuntu-latest
    needs:
      - PolybotBuild
      - Yolo5Build

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Copy Compose Files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: docker-compose.yaml
          target: PolybotService/

      - name: Update Docker Compose Project on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update && sudo apt install jq -y
            
            cd PolybotService/
            
            echo "${{ secrets.TELEGRAM_TOKEN }}" > telegram_token.secret
            
            NGROK_DOMAIN=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            
            echo """
            
            MONGO_IMAGE=mongo:5
            YOLO5_IMG_NAME=davidhei/dockerproject:yolo5-${{ github.run_number }}
            POLYBOT_IMG_NAME=davidhei/dockerproject:polybot-${{ github.run_number }}
            BUCKET_NAME=${{ secrets.BUCKET_NAME }}
            TELEGRAM_APP_URL=${{ secrets.TELEGRAM_APP_URL }}
            TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
            """ > .env
            
            docker-compose down
            docker-compose up -d #add initialize if here

