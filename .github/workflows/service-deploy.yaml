name: Polybot Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 3.18.223.43  # to be updated

jobs:
  PolybotBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Build and Push Polybot Image
        run: |
          cd polybot
          
          docker login -u ${{ secrets.DOCKER_REPO_USERNAME }} -p ${{ secrets.DOCKER_REPO_PASSWORD }}

          POLYBOT_IMAGE_NAME=davidhei/dockerproject/polybot:${{ github.run_number }}
          docker build -t $POLYBOT_IMAGE_NAME .
          docker push $POLYBOT_IMAGE_NAME

  Yolo5Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Build and Push Yolo5 Image
        run: |
          cd yolo5
          
          docker login -u ${{ secrets.DOCKER_REPO_USERNAME }} -p ${{ secrets.DOCKER_REPO_PASSWORD }}

          YOLO5_IMAGE_NAME=davidhei/dockerproject/yolo5-app:${{ github.run_number }}
          docker build -t $YOLO5_IMAGE_NAME .
          docker push $YOLO5_IMAGE_NAME

  Deploy:
    name: Deploy Docker Compose Project
    runs-on: ubuntu-latest
    needs:
      - PolybotBuild
      - Yolo5Build

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2

      - name: Copy Compose Files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: docker-compose.yaml
          target: PolybotService/

      - name: Update Docker Compose Project on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update && sudo apt install jq -y
            
            cd PolybotService/
            
            echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" > telegram_bot_token.secret
            
            NGROK_DOMAIN=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            
            echo """
            TELEGRAM_APP_URL=${{ secrets.TELEGRAM_APP_URL }}
            
            # Base image
            mongodb_image=mongo:4.4.0
            yolo5_image=${{ secrets.DOCKER_REPO_USERNAME }}/yolo5:${{ github.run_number }}
            polybot_image=${{ secrets.DOCKER_REPO_USERNAME }}/polybot:${{ github.run_number }}
            
            # Container names
            mongo_primary_container_name=mongodb_primary
            mongo_secondary_1_container_name=mongodb_secondary_1
            mongo_secondary_2_container_name=mongodb_secondary_2
            yolo_container_name=yolo_app
            polybot_container_name=polybot_app
            
            # Networks names
            mongodb_replica_set=mongodb_replica_set
            mongodb_primary_to_yolo=mongodb_primary_to_yolo
            yolo_to_polybot=yolo_to_polybot
            driver=bridge
            
            # AWS variables
            BUCKET_NAME=${{ secrets.BUCKET_NAME }}
            TELEGRAM_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_AUTOTOKEN=${{ secrets.TELEGRAM_AUTOTOKEN }}
            """ > .env
            
            docker-compose down
            docker-compose up -d
