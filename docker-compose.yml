version: '3.9'

services:
  mongo_1:
    container_name: mongo_1
    image: mongo:${MONGO_IMAGE}
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db
      - ./init-replica-set.sh:/docker-entrypoint-initdb.d/init-replica-set.sh
    env_file:
      - .env
    networks:
      - mongoCluster
    command: bash -c "mongod --replSet myReplicaSet --bind_ip_all && /docker-entrypoint-initdb.d/ini>

  mongo_2:
    container_name: mongo_2
    image: mongo:${MONGO_IMAGE}
    ports:
      - "27018:27017"
    volumes:
      - mongo2_data:/data/db
    env_file:
      - .env
    networks:
      - mongoCluster
    command: mongod --replSet myReplicaSet --bind_ip_all

  mongo_3:
    container_name: mongo_3
    image: mongo:${MONGO_IMAGE}
    ports:
      - "27019:27017"
    volumes:
      - mongo3_data:/data/db
    env_file:
      - .env
    networks:
      - mongoCluster
    command: mongod --replSet myReplicaSet --bind_ip_all

  polybot:
    container_name: polybot
    image: ${POLYBOT_IMG_NAME}
    ports:
      - "8443:8443"
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro
    env_file:
      - .env
    networks:
      - mongoCluster
    depends_on:
      - mongo_1
      - mongo_2
      - mongo_3

networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1_data:
    driver: local
  mongo2_data:
    driver: local
  mongo3_data:
    driver: local
