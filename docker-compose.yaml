version: '3.8'

services:
  mongo_1:
    container_name: mongo_1
    image: ${MONGO_IMAGE}
    ports:
      - "27017:27017"
    volumes:
      - mongo_1_data:/data/db
    env_file:
      - .env
    networks:
      - mongoCluster
    command: mongod --replSet myReplicaSet --bind_ip_all


  mongo_2:
    container_name: mongo_2
    image: ${MONGO_IMAGE}
    ports:
      - "27018:27017"
    volumes:
      - mongo_2_data:/data/db
    env_file:
      - .env
    networks:
      - mongoCluster
    command: mongod --replSet myReplicaSet --bind_ip_all

  mongo_3:
    container_name: mongo_3
    image: ${MONGO_IMAGE}
    ports:
      - "27019:27017"
    volumes:
      - mongo_3_data:/data/db
    env_file:
      - .env
    networks:
      - mongoCluster
    command: mongod --replSet myReplicaSet --bind_ip_all

  polybot:
    container_name: polybot
    image: ${POLYBOT_IMG_NAME}
    ports:
      - "8443:8443"
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro
    env_file:
      - .env
    networks:
      - mongoCluster
    depends_on:
      - mongo_1
      - mongo_2
      - mongo_3

  yolo5_app:
    container_name: yolo5_app
    image: ${YOLO5_IMG_NAME}
    ports:
      - "8081:8081"
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro
    env_file:
      - .env
    networks:
      - mongoCluster
    depends_on:
      mongo_init:
        condition:
          service_healthy

  mongo_init:
    container_name: mongo_init
    image: davidhei/dockerproject:mongo_init
    depends_on:
      - mongo_1
      - mongo_2
      - mongo_3
    volumes:
      - ./initiate-replica.sh:/docker-entrypoint-initdb.d/initiate-replica.sh
    env_file:
      - .env
    networks:
      - mongoCluster
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/initiate-replica.sh"]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 2

networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo_1_data:
    driver: local
  mongo_2_data:
    driver: local
  mongo_3_data:
    driver: local
